{"version":3,"sources":["webpack:///webpack/bootstrap 32d18bd6942267fb4b0f","webpack:///./lib/bubbleS.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/bubble_grid.js","webpack:///./lib/bubble.js","webpack:///./lib/defaults.js","webpack:///./lib/shooter.js","webpack:///./lib/empty_bubble.js","webpack:///./lib/utils.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,sBAAsB;AACvC,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,sBAAsB;AACvC,oBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;;;;;;AClOA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;ACrDA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAsB,2BAA2B;AACjD;AACA;;AAEA,oBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA,kBAAiB,OAAO;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;;;;;;ACnGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 32d18bd6942267fb4b0f\n **/","const GameView = require('./game_view');\nconst Defaults = require('./defaults');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvasElement = document.getElementsByTagName('canvas')[0];\n  canvasElement.width = Defaults.WIDTH;\n  canvasElement.height = Defaults.HEIGHT;\n\n  let gameView = new GameView(canvasElement);\n  gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bubbleS.js\n ** module id = 0\n ** module chunks = 0\n **/","const BubbleGrid = require('./bubble_grid');\nconst Shooter = require('./shooter');\nconst Bubble = require('./bubble');\nconst EmptyBubble = require('./empty_bubble');\nconst Defaults = require('./defaults');\nconst Utils = require('./utils');\n\nfunction Game() {\n  this.bubbleGrid = new BubbleGrid();\n  this.bubble = new Bubble([190, 600]);\n  this.shooter = new Shooter(this);\n  this.turnUntilRow = Defaults.TURNS;\n  this.gameOver = '';\n}\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Defaults.WIDTH, Defaults.HEIGHT);\n  this.bubbleGrid.draw(ctx);\n  this.shooter.draw(ctx);\n  this.bubble.draw(ctx);\n  ctx.beginPath();\n  ctx.moveTo(0, 560);\n  ctx.lineTo(380, 560);\n  ctx.strokeStyle = \"#64a9d3\";\n  ctx.stroke();\n};\n\nGame.prototype.step = function () {\n  this.bubble.move();\n  this.checkCollisions();\n  if (this.turnUntilRow === 0) {\n    this.bubbleGrid.addNewRow();\n    this.turnUntilRow = Defaults.TURNS;\n  }\n  this.checkGameOver();\n};\n\nGame.prototype.checkCollisions = function () {\n  let otherBubble;\n  for (let i = 0; i < Defaults.SIZE[0]; i++) {\n    for (let j = 0; j < Defaults.SIZE[1]; j++) {\n      otherBubble = this.bubbleGrid.grid[i][j];\n      if (this.bubble.isCollidedWith(otherBubble) ||\n          this.bubble.isCollidedTop()) {\n        this.snapBubble();\n        this.destroyMatches();\n      }\n    }\n  }\n};\n\nGame.prototype.snapBubble = function () {\n  let newPos;\n  let gridPos = [];\n\n  for (let i = 0; i < Defaults.SIZE[0]; i++) {\n    for (let j = 0; j < Defaults.SIZE[1]; j++) {\n      let otherBubble = this.bubbleGrid.grid[i][j];\n      let dist = Utils.findDistance(this.bubble.pos, otherBubble.pos);\n\n      if (dist < (2 * this.bubble.radius) && otherBubble.constructor.name === 'EmptyBubble') {\n        if (!newPos || dist < Utils.findDistance(this.bubble.pos, newPos)) {\n          newPos = otherBubble.pos;\n          gridPos = [i, j];\n        }\n      }\n    }\n  }\n  this.turnUntilRow -= 1;\n  this.bubble.vel = Defaults.VELOCITY;\n  this.bubble.pos = newPos;\n  this.bubble.gridPos = gridPos;\n  this.bubbleGrid.grid[gridPos[0]][gridPos[1]] = this.bubble;\n};\n\nGame.prototype.destroyMatches = function () {\n  let matches = this.findMatch(this.bubble);\n  if (matches.length > 2) {\n    this.destroyBubbles(matches);\n    this.resetChecks();\n\n    let floatingClusters = this.floatingClusters();\n    floatingClusters.forEach((cluster) => {\n      this.destroyBubbles(cluster);\n    });\n  }\n  this.resetChecks();\n\n  this.bubble = new Bubble([190, 600]);\n};\n\nGame.prototype.findMatch = function (startBubble) {\n  let foundMatch = [];\n  let checkArray = [startBubble];\n  let currentBubble;\n  let isIndented = this.bubbleGrid.grid[0][1].pos[0] % (2 * Defaults.RADIUS) === 0;\n\n  while (checkArray.length > 0) {\n    currentBubble = checkArray.pop();\n    if (currentBubble.color === startBubble.color && !currentBubble.checked) {\n      foundMatch.push(currentBubble);\n    }\n    currentBubble.checked = true;\n    this.getNeighbors(currentBubble.neighborCoords(isIndented)).forEach((neighbor) => {\n      if (!neighbor.checked && neighbor.color === startBubble.color) {\n        checkArray.push(neighbor);\n      }\n    });\n  }\n\n  return foundMatch;\n};\n\nGame.prototype.floatingClusters = function () {\n  let clusters = [];\n  let that = this;\n\n  this.bubbleGrid.grid.forEach((row) => {\n    row.forEach((bubble) => {\n      if (bubble.constructor.name === 'Bubble') {\n        let cluster = that.findFloatingCluster(bubble);\n        if (cluster.length > 0) {\n          clusters.push(cluster);\n        }\n      }\n    });\n  });\n\n  return clusters;\n};\n\nGame.prototype.findFloatingCluster = function (startBubble) {\n  let foundMatch = [];\n  let checkArray = [startBubble];\n  let currentBubble;\n  let connectedRoof = false;\n  let isIndented = this.bubbleGrid.grid[0][1].pos[0] % (2 * Defaults.RADIUS) === 0;\n\n  while (checkArray.length > 0) {\n    currentBubble = checkArray.pop();\n    if (currentBubble.constructor.name === 'Bubble' && !currentBubble.checked) {\n      if (currentBubble.gridPos[0] === 0) {\n        return [];\n      }\n      foundMatch.push(currentBubble);\n    }\n    currentBubble.checked = true;\n    this.getNeighbors(currentBubble.neighborCoords(isIndented)).forEach((neighbor) => {\n      if (!neighbor.checked && currentBubble.constructor.name === 'Bubble') {\n        checkArray.push(neighbor);\n      }\n    });\n  }\n\n  return foundMatch;\n};\n\nGame.prototype.destroyBubbles = function (bubbles) {\n  bubbles.forEach((bubble) => {\n    let x = bubble.gridPos[0];\n    let y = bubble.gridPos[1];\n    this.bubbleGrid.grid[x][y] = new EmptyBubble(bubble.pos, bubble.gridPos);\n  });\n};\n\nGame.prototype.resetChecks = function () {\n  this.bubbleGrid.grid.forEach((row) => {\n    row.forEach((bubble) => {\n      bubble.checked = false;\n    });\n  });\n};\n\nGame.prototype.getNeighbors = function (neighborCoords) {\n  let neighbors = [];\n\n  neighborCoords.forEach((coords) => {\n    let bubble = this.bubbleGrid.grid[coords[0]][coords[1]];\n\n    if (bubble.constructor.name === 'Bubble') {\n      neighbors.push(bubble);\n    }\n  });\n\n  return neighbors;\n};\n\nGame.prototype.checkGameOver = function () {\n  if (this.isEmpty()) {\n    this.gameOver = 'win';\n  } else if (this.touchBottom()) {\n    this.gameOver = 'lose';\n  }\n};\n\nGame.prototype.touchBottom = function () {\n  let touchBottom = false;\n  let grid = this.bubbleGrid.grid;\n\n  grid[grid.length - 2].forEach((bubble) => {\n    if (bubble.constructor.name === 'Bubble') {\n      touchBottom = true;\n    }\n  });\n\n  return touchBottom;\n};\n\nGame.prototype.isEmpty = function () {\n  let isEmpty = true;\n\n  this.bubbleGrid.grid.forEach((row) => {\n    row.forEach((bubble) => {\n      if (bubble.constructor.name === 'Bubble') {\n        isEmpty = false;\n        return false;\n      }\n    });\n    if (!isEmpty) {\n      return false;\n    }\n  });\n\n  return isEmpty;\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Game = require('./game');\nconst Key = require('../vendor/keymaster');\n\nfunction GameView(canvasElement) {\n  this.canvasElement = canvasElement;\n  this.ctx = canvasElement.getContext('2d');\n  this.game = new Game();\n}\n\nGameView.prototype.start = function () {\n  this.mouseMoveHandler();\n  this.clickHandler();\n  this.game.bubbleGrid.createGrid();\n  let intervalId = setInterval(() => {\n    this.game.step();\n    this.game.draw(this.ctx);\n    if (this.game.gameOver) {\n      this.handleGameOver(intervalId);\n    }\n  }, 20);\n};\n\nGameView.prototype.handleGameOver = function (intervalId) {\n  this.ctx.fillStyle = \"black\";\n  this.ctx.font = \"italic \"+20+\"pt Rock Salt\";\n  this.ctx.fillText(`You ${this.game.gameOver}...`, 0, 30);\n  this.ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n  this.ctx.fillRect(0,0,380,600);\n  clearInterval(intervalId);\n};\n\nGameView.prototype.getMousePos = function (event) {\n  var rect = this.canvasElement.getBoundingClientRect();\n  return {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  };\n};\n\nGameView.prototype.mouseMoveHandler = function () {\n  this.canvasElement.addEventListener('mousemove', (event) => {\n    let mousePos = this.getMousePos(event);\n    let shooter = this.game.shooter.mousePos = [mousePos.x, mousePos.y];\n    }, false\n  );\n};\n\nGameView.prototype.clickHandler = function () {\n  this.canvasElement.addEventListener('click', (event) => {\n    this.game.shooter.fireBubble();\n  });\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 2\n ** module chunks = 0\n **/","const Bubble = require('./bubble');\nconst EmptyBubble = require('./empty_bubble');\nconst Defaults = require('./defaults');\n\nfunction BubbleGrid() {\n  this.grid = [];\n}\n\nBubbleGrid.prototype.createGrid = function () {\n  let startCoord = [Defaults.RADIUS, Defaults.RADIUS];\n\n  for (let rowIdx = 0; rowIdx < Defaults.SIZE[0]; rowIdx++) {\n    let row = [];\n    let nextCoord;\n\n    for (let i = 0; i < 9; i++) {\n      let newBubble;\n\n      if (i === 0) {\n        if (rowIdx % 2 === 1) {\n          startCoord[0] = 2 * Defaults.RADIUS;\n        } else {\n          startCoord[0] = Defaults.RADIUS;\n        }\n\n        nextCoord = startCoord.slice();\n        if (rowIdx > 4) {\n          newBubble = new EmptyBubble(nextCoord.slice(), [rowIdx, i]);\n        } else {\n          newBubble = new Bubble(nextCoord.slice(), [rowIdx, i]);\n        }\n\n        row.push(newBubble);\n        continue;\n      }\n\n      nextCoord[0] = nextCoord[0] + 2 * Defaults.RADIUS;\n      if (rowIdx > 4) {\n        newBubble = new EmptyBubble(nextCoord.slice(), [rowIdx, i]);\n      } else {\n        newBubble = new Bubble(nextCoord.slice(), [rowIdx, i]);\n      }\n\n      row.push(newBubble);\n    }\n\n    startCoord[1] = startCoord[1] + (2 * Defaults.RADIUS);\n    this.grid.push(row);\n  }\n};\n\nBubbleGrid.prototype.addNewRow = function () {\n  let startCoord;\n  let row = [];\n  let nextCoord;\n\n  if (this.grid[0][0].pos[0] === Defaults.RADIUS) {\n    startCoord = [2 * Defaults.RADIUS, Defaults.RADIUS];\n  } else {\n    startCoord = [Defaults.RADIUS, Defaults.RADIUS];\n  }\n\n  for (let i = 0; i < 9; i++) {\n    let newBubble;\n\n    if (i === 0) {\n      nextCoord = startCoord.slice();\n      newBubble = new Bubble(nextCoord.slice(), [0, i]);\n      row.push(newBubble);\n      continue;\n    }\n\n    nextCoord[0] = nextCoord[0] + 2 * Defaults.RADIUS;\n    newBubble = new Bubble(nextCoord.slice(), [0, i]);\n    row.push(newBubble);\n  }\n  this.shiftGridDown();\n  this.grid.unshift(row);\n};\n\nBubbleGrid.prototype.shiftGridDown = function () {\n  this.grid.pop();\n  this.grid.forEach((row) => {\n    row.forEach((bubble) => {\n      bubble.pos[1] += 2 * Defaults.RADIUS;\n      bubble.gridPos[0] += 1;\n    });\n  });\n\n};\n\nBubbleGrid.prototype.draw = function (ctx) {\n  this.grid.forEach((row) => {\n    row.forEach((bubble) => {\n      bubble.draw(ctx);\n    });\n  });\n};\n\nmodule.exports = BubbleGrid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bubble_grid.js\n ** module id = 3\n ** module chunks = 0\n **/","const Defaults = require('./defaults');\nconst Utils = require('./utils');\n\nfunction Bubble(pos, gridPos) {\n  this.radius = Defaults.RADIUS;\n  this.vel = Defaults.VELOCITY;\n  this.color = this.randomizeColor();\n  this.pos = pos;\n  this.gridPos = gridPos;\n  this.checked = false;\n}\n\nBubble.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n};\n\nBubble.prototype.randomizeColor = function () {\n  const rand = Math.random();\n  if (rand < 0.25) {\n    return Defaults.COLORS[0];\n  } else if (rand < 0.5) {\n    return Defaults.COLORS[1];\n  } else if (rand < 0.75) {\n    return Defaults.COLORS[2];\n  } else {\n    return Defaults.COLORS[3];\n  }\n};\n\nBubble.prototype.move = function () {\n  if (this.pos[0] + Defaults.RADIUS > Defaults.WIDTH || this.pos[0] - Defaults.RADIUS < 0) {\n    this.vel[0] = -1 * this.vel[0];\n  }\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n};\n\nBubble.prototype.isCollidedWith = function (otherBubble) {\n  let dist = Utils.findDistance(this.pos, otherBubble.pos);\n  return dist < (2 * this.radius) && otherBubble.constructor.name === 'Bubble';\n};\n\nBubble.prototype.isCollidedTop = function () {\n  return this.pos[1] < this.radius;\n};\n\nBubble.prototype.neighborCoords = function(isIndented) {\n  let neighborCoords = [];\n  let x, y;\n\n  if ((this.gridPos[0] % 2 === 0 && !isIndented) || (this.gridPos[0] % 2 === 1 && isIndented)) {\n    Defaults.NEIGHBOR_OFFSET_EVEN.forEach((offset) => {\n      x = this.gridPos[0] + offset[0];\n      y = this.gridPos[1] + offset[1];\n      if (x >= 0 && x < 15 && y >= 0 && y < 9) {\n        neighborCoords.push([x, y]);\n      }\n    });\n  } else {\n    Defaults.NEIGHBOR_OFFSET_ODD.forEach((offset) => {\n      x = this.gridPos[0] + offset[0];\n      y = this.gridPos[1] + offset[1];\n      if (x >= 0 && x < 15 && y >= 0 && y < 9) {\n        neighborCoords.push([x, y]);\n      }\n    });\n  }\n\n  return neighborCoords;\n};\n\nmodule.exports = Bubble;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bubble.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = {\n  TURNS: 8,\n  SIZE: [15, 9],\n  WIDTH: '380',\n  HEIGHT: '600',\n  RADIUS: 20,\n  VELOCITY: [0, 0],\n  COLORS: ['#d97884', '#d9ce78', '#78b4d9', '#78d99d'],\n  NEIGHBOR_OFFSET_EVEN: [\n    [-1, -1],\n    [-1, 0],\n    [0, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1]\n  ],\n  NEIGHBOR_OFFSET_ODD: [\n    [-1, 0],\n    [-1 , 1],\n    [0, -1],\n    [0, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/defaults.js\n ** module id = 6\n ** module chunks = 0\n **/","const Bubble = require('./bubble');\nconst Defaults = require('./defaults');\n\nfunction Shooter(game) {\n  this.mousePos = [Defaults.WIDTH / 2, Defaults.HEIGHT - 2 * Defaults.RADIUS];\n  this.game = game;\n}\n\nShooter.prototype.draw = function (ctx) {\n  let x = Defaults.WIDTH / 2;\n  let y = Defaults.HEIGHT;\n  let endPos = this.lineEndPos();\n  ctx.beginPath();\n  ctx.moveTo(x - 10, y);\n  ctx.lineTo(x + 10, y);\n  ctx.lineTo(x + endPos[0], y - endPos[1]);\n  ctx.closePath();\n  ctx.fillStyle = this.game.bubble.color;\n  ctx.fill();\n  ctx.strokeStyle = this.game.bubble.color;\n  ctx.stroke();\n};\n\nShooter.prototype.lineEndPos = function () {\n  const opp = (Defaults.HEIGHT - this.mousePos[1]);\n  const adj = (this.mousePos[0] - Defaults.WIDTH / 2);\n\n  this.angleRad = Math.atan2(opp, adj);\n  let lineLength = 2 * Defaults.RADIUS;\n  return [lineLength * Math.cos(this.angleRad), lineLength * Math.sin(this.angleRad)];\n};\n\nShooter.prototype.fireBubble = function () {\n  let xVel = 15 * Math.cos(this.angleRad);\n  let yVel = -15 * Math.sin(this.angleRad);\n\n  this.game.bubble.vel = [xVel, yVel];\n};\n\nmodule.exports = Shooter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/shooter.js\n ** module id = 7\n ** module chunks = 0\n **/","const Defaults = require('./defaults');\n\nfunction EmptyBubble(pos, gridPos) {\n  this.radius = Defaults.RADIUS;\n  this.pos = pos;\n  this.gridPos = gridPos;\n}\n\nEmptyBubble.prototype.draw = function () {\n\n};\n\nmodule.exports = EmptyBubble;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/empty_bubble.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = {\n  findDistance(coord1, coord2) {\n    let dist = Math.sqrt(\n      Math.pow(coord1[0] - coord2[0], 2) +\n      Math.pow(coord1[1] - coord2[1], 2)\n    );\n\n    return dist;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/utils.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}